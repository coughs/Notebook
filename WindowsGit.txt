msysGit的shell环境中无法输入中文的，想要输入中文，我们需要修改下配置文件/etc/inputrc。
步骤1：进入git安装目录，找到/etc/inputrc；
步骤2：修改配置项
找到如下配置代码
set output-meta off
set convert-meta on
修改成
set output-meta on
set convert-meta off
步骤3：关闭git bash然后再重启
就可以在shell环境中输入中文了
虽然可以输入中文，但msysGit在中文的显示上依旧有问题，接下来我们来看下如果解决中文显示问题。

解决msysGit的提交说明乱码问题
git config --system i18n.logOutputEncoding gbk 用于将提交说明的输出编码设置为gbk
git config --system i18n.commitEncoding gbk 标注提交说明所使用的字符集。
export LESSCHARSET=utf-8 设置分页器的编码，这与git log 能否正常打印中文日志息息相关，因为git log的显示采用的就是less分页器，LESSCHARSET是分页器的环境变量，只要设置为utf-8，即可正常显示中文
（ps：请避免使用中文名称的文件，虽然通过msysGit的设置可以正常显示中文名文件。）


Git 系列之三：Windows 下 Git 配置与使用指南

一、安装

默认安装：msysGit

二、配置

1、\msysgit\etc\gitconfig 添加：
【注意！】请将第二行最后的 “your-id” 修改成你在服务器上的实际 id，默认是姓名拼音。

[alias]
    go = "! bash -c \"git pull && git add .; if [ \\\"$*\\\" == \\\"\\\" ]; then git commit -a; else git commit -am \\\"$*\\\"; fi; git push origin master:your-id;\""
[core]
    autocrlf = false
[gui]
    encoding = utf-8
[i18n]
    commitencoding = GB2312
[user]
    email = xxx@gmail.com
    name = 某某某
###############################################    
#	CHS
[alias]
    go = "! bash -c \"git pull && git add .; if [ \\\"$*\\\" == \\\"\\\" ]; then git commit -a; else git commit -am \\\"$*\\\"; fi; git push origin master:your-id;\""
[core]
	autocrlf = true
[gui]
    encoding = utf-8
[i18n]
	logOutputEncoding = gbk
	commitEncoding = gbk
[user]
    email = xxx@gmail.com
    name = 某某某

2、想要输入中文，我们需要修改下配置文件\msysgit\etc\inputrc 修改两行为：
set output-meta on
set convert-meta off

3、\msysgit\git\contrib\completion\git-completion.bash 末尾增加：
alias ls='ls --show-control-chars --color=auto'

4、\msysgit\etc\profile 末尾增加：
export LESSCHARSET=utf-8
export HOME=/e/Home

5、复制\msysgit\etc\gitconfig到$HOME
cp \msysgit\etc\gitconfig $HOME\.gitconfig

【TIP】以上文件最好使用支持 unix 格式的编辑器修改（如 Notepad++、NetBeans），最次也用“写字板”而非“记事本”。

【TIP】若想了解为什么这样设置，请参见：Windows 下 Git 客户端的选择，及 msysGit 各种中文问题的解决

（ps：请避免使用中文名称的文件，虽然通过msysGit的设置可以正常显示中文名文件。）

三、生成密钥

安装完后，需要生成一对 Key（这里指密钥），然后才能通过加密的方式和服务器的代码库取得同步。

到开始菜单，找到“Git Bash”，运行之，并执行以下命令：

$ ssh-keygen -t rsa
程序会提示您输入密钥的文件名，直接按回车即可。
然后会要求你输入一个密码，将来在使用密钥的时候需要提供这个密码。可以输入，也可以不输入直接回车（无论输入还是不输入，都会要求你确认一次）。
确认完毕后，程序将生成一对密钥存放在以下文件夹：

$HOME\.ssh

密钥分成两个文件，一个私钥（id_rsa）、一个公钥（id_rsa.pub）。
私钥保存在您的电脑上，公钥交项目负责人添加到服务器上。用户必须拥有与服务器公钥所配对的私钥，才能访问服务器上的代码库。

【注意！】为了项目代码的安全，请妥善保管你的私钥！因为一旦私钥外泄，将可能导致服务器上的代码被泄漏！

四、使用

1、克隆代码库

使用 Windows 资源管理器，打开你打算存放项目代码的文件夹，点右键选择 Git Bash。

在我们的项目管理系统中，每个项目的首页，都有写明代码克隆的地址，比如我们用于测试目的的沙盒项目：

$ git clone your-name@testing.aysaas.com:/var/projects/sandbox
在 Git Bash 中运行这条命令就能将沙盒项目中的所有代码（其实只是几个随便测试的文件）克隆到本地。

接着您就可以打开习惯的 IDE（如 NetBeans），投入到项目的开发中啦～！

【TIP】上面命令中的 your-name 要改成你在服务器上实际的用户名。

2、查看修改差异

开发过程中，如果你想了解修改了哪些代码，总览所有代码的改动情况，可以在 Git Bash 中输入此命令：

$ git diff
【TIP】Git Bash diff 的时候有两个缺点：一、窗口太窄，可能显示不下整行的代码；二、如果代码中有中文，会乱码。如果你碰到这两个问题，可以在项目文件夹下点右键，选择 Git Gui。

3、提交修改

每当完成一个阶段的代码，就需要提交代码以记录进展，方便日后查找问题以及团队协作。

$ git go aaa 修改说明（改动了什么？为什么这样改？）
【TIP】别忘了 go 后面的 aaa，关于 ‘git go’ 命令的详细说明，请参见 Windows 下 Git 客户端的选择，及 msysGit 各种中文问题的解决

【TIP】请尽量养成勤提交的好习惯。当代码不幸出现问题时，比较容易找出从什么时刻开始出现问题，并回退到该时刻进行调试，最大限度保护已完成的阶段性工作。

【TIP】以上命令，都需要在项目目录下运行。Git Bash 在命令提示符前，会显示当前所在的目录。如果当前不在项目目录之下，需要用 cd 命令切换到项目所在目录。
简单的办法，就是先在资源管理器里打开项目文件夹，再点右键，选择 Git Bash。

五、总结

至此，从获取代码、查看差异、到提交代码，整个流程都熟悉了。Git 还有比较高级的技巧，大家可以参考 Git 进阶功能 或在线找进一步的资料学习。


Git 系列之二：Windows 下 Git 客户端的选择，及 msysGit 各种中文问题的解决-转载

Git 系列之二：Windows 下 Git 客户端的选择，及 msysGit 各种中文问题的解决

在 Windows 下用 NetBeans 做 PHP 开发，首先想到的是 NetBeans 的插件：NBGit。
评价：能用；若需没有的功能，可以自定义菜单调用自定义 bat 脚本；开发不活跃，使用没有信心。
第二个则是：TortoiseGit，SVN 小乌龟的 Git 版本。
评价：该有的功能基本都有了，还是不错的。
另外，TortoiseGit 只是 GUI 工具，使用它需要先安装 msysGit，这是正宗的 Git 之 Windows 版本。msysGit 有个简单的 GUI 工具，及简单的 Explorer 集成；但它自带的 Bash 非常好用，深得 Linux 的真传。
选择：msysGit。
理由：
NBGit 不用说，功能都不完善，还需要自己定制 bat 脚本（若此，则它同样要依赖 msysGit）；开发不活跃，很可能 NetBeans 下个版本更新就不能用了；况且，我们还有别的项目，不使用 NetBeans。
TortoiseGit 从功能上说是完善的，但它只是功能的堆砌而已，使用时完全体会不到 GUI 带来的便利。相反，它让人感觉很繁琐，一个劲地点鼠标，点来点去全是跟菜单打交道，远离了 Git 命令、远离了 Git 输出提示、远离了真相。
msysGit 的 Bash 非常好用；加上 Git 强大的 alias 功能，我们完全可以自定义一个 $ git go，使得 90% 的情况下只需要这一个命令，即使是不熟悉命令行的 Windows 用户也会觉得很好玩；因为 NBGit、TortoiseGit 都需要 msysGit 做底层，我们直接用底层工具也避免了上层 GUI 带来的额外的 bug。
需要的配置：
1、\msysgit\etc\git-completion.bash：
alias ls='ls --show-control-chars --color=auto'
说明：使得在 Git Bash 中输入 ls 命令，可以正常显示中文文件名。
2、\msysgit\etc\inputrc：
set output-meta on
set convert-meta off
说明：使得在 Git Bash 中可以正常输入中文，比如中文的 commit log。
3、\msysgit\etc\profile：
export LESSCHARSET=utf-8
说明：$ git log 命令不像其它 vcs 一样，n 条 log 从头滚到底，它会恰当地停在第一页，按 space 键再往后翻页。这是通过将 log 送给 less 处理实现的。以上即是设置 less 的字符编码，使得 $ git log 可以正常显示中文。其实，它的值不一定要设置为 utf-8，比如 latin1 也可以……。还有个办法是 $ git –no-pager log，在选项里禁止分页，则无需设置上面的选项。
4、\msysgit\etc\gitconfig：
[alias]
go = “! bash -c \”git pull && git add .; if [ \\\"$*\\\" == \\\"\\\" ]; then git commit -a; else git commit -am \\\”$*\\\”; fi; git push origin master:your-id;\”"
说明：强大的 alias，有了这个，我们 90% 的情况下只需要输入 $ git go 这一个命令，免去了先拉后提交再推的繁琐步骤。
两种用法：
$ git go
或
$ git go aaa 修订说明
命令后带修订说明时，会直接提交。需要注意的是，在“修订说明”之前，有还个“aaa”，这是个 bug，参数中的第一个会被忽略，所以随便写一个凑数的……。
若命令行里没有提供修订说明，则会自动弹出一个编辑器，等待输入。默认的编辑器是 Vim。Vim 的使用是很简单的，首先要明白它有两个模式，一个是命令模式、一个是输入模式。Vim 启动的时候默认的是命令模式，需要先按’i'键，进入输入模式；然后就正常编辑；编辑完成之后，将输入法切换回英文状态，按 Esc 重新进入命令模式；此时按 ‘(Shift):wq‘ 并回车，w 表示写入保存、q 表示退出。完毕！
若实在不习惯 Vim，也可以设置为其它编辑器：
$ git config --global core.editor "notepad"
其中 notepad 可以替换为更好用的 wordpad、notepad++ 等（不过它们在命令行里无法直接访问，得先设置 PATH 变量）。
以上 alias 是为 Windows 定制的，Linux 下可以写得更优雅，不过鉴于使用上没分别，就保持一致吧～。
[gui]
encoding = utf-8
说明：我们的代码库是统一用的 utf-8，这样设置可以在 git gui 中正常显示代码中的中文。
[i18n]
commitencoding = GB2312
说明：如果没有这一条，虽然我们在本地用 $ git log 看自己的中文修订没问题，但，一、我们的 log 推到服务器后会变成乱码；二、别人在 Linux 下推的中文 log 我们 pull 过来之后看起来也是乱码。这是因为，我们的 commit log 会被先存放在项目的 .git/COMMIT_EDITMSG 文件中；在中文 Windows 里，新建文件用的是 GB2312 的编码；但是 Git 不知道，当成默认的 utf-8 的送出去了，所以就乱码了。有了这条之后，Git 会先将其转换成 utf-8，再发出去，于是就没问题了。
以上，给 Windows 下的同事在 Git Bash 里推代码就比较完美了。不过仍然有 3 个问题：
1、上面的 alias $ git go 有 bug，代码修订说明之前要输入一串字符凑数；
2、$ git diff，如果代码里有中文，会显示乱码；
3、$ git checkout 有时候需要修改/增删很多文件，如果某些文件被占用，会被 Windows 拒绝，导致失败，甚至可能造成版本库出现无法修复的问题。
这 3 个都是可承受的问题，前两个应该有办法解决；第 3 个归功于文件系统，只能尽量避免 checkout，实在需要的时候先注销一次，就不会有问题了。
【TIP】该文只是解释说明，具体操作请按《Windows 下 git 配置与使用指南》Wiki 执行。

cygwin 下建立用gitosis建立git中心服务器
http://blog.sina.com.cn/s/blog_4b1816550100k2dp.html
git clone git@your-server:gitosis-admin.git

